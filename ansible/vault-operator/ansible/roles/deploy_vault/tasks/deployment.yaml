---
- name: Vault Deployment
  k8s:
    definition:
      kind: "Deployment"
      apiVersion: "extensions/v1beta1"
      metadata:
        name: "{{ vault_cluster_name }}"
        namespace: "{{ namespace }}"
        labels:
          app: "{{ vault_app_name }}"
          vault_cluster: "{{ vault_cluster_name }}"
      spec:
        replicas: "{{ vault_replica_size }}"
        selector:
          matchLabels:
            app: "{{ vault_app_name }}"
            vault_cluster: "{{ vault_cluster_name }}"
        strategy:
          type: "{{ vault_deployment_strategy_type }}"
          rollingUpdate:
            maxUnavailable: "{{ vault_deployment_strategy_max_unavailable }}"
            maxSurge: "{{ vault_deployment_strategy_max_surge }}"
        template:
          metadata:
            name: "{{ vault_cluster_name }}"
            labels:
              app: "{{ vault_app_name }}"
              vault_cluster: "{{ vault_cluster_name }}"
          spec:
            containers:
            - name: vault
              image: "{{ vault_image_name }}"
              imagePullPolicy: "{{ vault_image_pull_policy }}"
              command:
              - /bin/vault
              - server
              - -config={{ vault_config_file_path }}
              env:
              - name: "{{ vault_redirect_addr_env_name }}"
                value: "{{ vault_redirect_addr_url }}"
              - name: "{{ vault_cluster_addr_env_name }}"
                value: "{{ vault_cluster_addr_url }}"
              volumeMounts:
              - mountPath: "{{ vault_config_path }}"
                name: "{{ vault_config_vol_name }}"
              - mountPath: "{{ vault_tls_asset_dir }}"
                name: "{{ vault_tls_asset_volume_name }}"
                readOnly: true
              securityContext:
                capabilities:
                  add:
                  - IPC_LOCK
              ports:
              - containerPort: "{{ vault_client_port_num }}"
                name: "{{ vault_client_port_name }}"
                protocol: TCP
              - containerPort: "{{ vault_cluster_port_num }}"
                name: "{{ vault_cluster_port_name }}"
                protocol: TCP
              livenessProbe:
                exec:
                  command:
                  - curl
                  - --connect-timeout
                  - "5"
                  - --max-time
                  - "10"
                  - -k
                  - -s
                  - "https://localhost:{{ vault_client_port_num }}/v1/sys/health"
                initialDelaySeconds: 10
                timeoutSeconds: 10
                periodSeconds: 60
                failureThreshold: 3
                successThreshold: 1
              readinessProbe:
                httpGet:
                  path: /v1/sys/health
                  port: "{{ vault_client_port_num }}"
                  scheme: HTTPS
                initialDelaySeconds: 10
                timeoutSeconds: 10
                periodSeconds: 10
                failureThreshold: 3
                successThreshold: 1
              resources: {}
            - name: statsd-exporter
              image: "{{ exporter_image_name }}"
              imagePullPolicy: "{{ vault_image_pull_policy }}"
              ports:
              - containerPort: "{{ vault_statsd_port_num }}"
                name: "{{ vault_statsd_port_name }}"
                protocol: UDP
              - containerPort: "{{ vault_prometheus_port_num }}"
                name: "{{ vault_prometheus_port_name }}"
                protocol: TCP
              resources: {}
              volumes:
              - configMap:
                  defaultMode: "{{ vault_volume_default_mode }}"
                  name: "{{ vault_configmap_name }}"
                name: "{{ vault_config_vol_name }}"
              - name: "{{ vault_tls_asset_volume_name }}"
                projected:
                  defaultMode: "{{ vault_volume_default_mode }}"
                  sources:
                  - secret:
                      name: "{{ etcd_client_secret_name }}"
                  - secret:
                      name: "{{ vault_server_secret_name }}"
            volumes:
            - configMap:
                defaultMode: "{{ vault_volume_default_mode }}"
                name: "{{ vault_configmap_name }}"
              name: "{{ vault_config_vol_name }}"
            - name: "{{ vault_tls_asset_volume_name }}"
              projected:
                defaultMode: "{{ vault_volume_default_mode }}"
                sources:
                - secret:
                    name: "{{ etcd_client_secret_name }}"
                - secret:
                    name: "{{ vault_server_secret_name }}"
